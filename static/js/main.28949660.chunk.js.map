{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberPage","allitem","pagesinList","pages","allPages","arrpages","i","push","pagecount","className","cn","disabled","href","onClick","map","page","active","length","items","from","to","numbers","n","getNumbers","App","useState","itemInPage","setitemInPage","setCurrentPage","inPage","visiblItem","slice","pageCountBegin","pageCountEnd","id","value","onChange","e","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA+B,SAAC,GAKtC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAeA,IAAMC,EAbN,SAAmBC,EAAgBC,GAMjC,IALA,IAAMC,GAAgBF,EAAWA,EAAUC,GAAgBA,EACrDE,EAAYH,EAAUC,EAAeC,EAAQ,EAAIA,EAEjDE,EAAW,GAERC,EAAI,EAAGA,GAAKF,EAAUE,GAAK,EAClCD,EAASE,KAAKD,GAGhB,OAAOD,EAGUG,CAAUZ,EAAOC,GAEpC,OACE,qBACEY,UAAU,aADZ,UAGE,oBACEA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBb,IADzC,SAGE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBd,EACfe,QAAS,WACHf,EAAc,GAChBC,EAAaD,EAAc,IAPjC,oBAcDE,EAAWc,KAAI,SAAAC,GACd,OACE,oBAAIN,UAAWC,IAAG,YAAa,UAC7B,CAAEM,OAAQlB,IAAgBiB,IAD5B,SAGE,mBAEE,UAAQ,WACRN,UAAU,YACVI,QAAS,WACPd,EAAagB,IAEfH,KAAK,KAPP,SASGG,GARIA,QAcb,oBAAIN,UAAWC,IAAG,YAChB,CAAEC,SAAUb,IAAgBE,EAAWiB,SADzC,SAGE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAAS,WACHhB,EAAUC,EAAcF,GAC1BG,EAAaD,EAAc,IAPjC,wBCrEFoB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQd,KAAKe,GAGf,OAAOD,EDDcE,CAAW,EAAG,IAClCT,KAAI,SAAAQ,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsCF,mBAAS,GAA/C,mBAAO3B,EAAP,KAAoB8B,EAApB,KAQA,IANuBC,EAAed,EAMhCe,GANiBD,EAMUH,EANKX,EAMOjB,EAL/BoB,EAAMa,MAAMF,EAASd,EAAOc,EAAQA,EAASd,IAMrDiB,EAAiBN,EAAa5B,EAAc4B,EAAa,EACzDO,EAAeD,EAAiBN,EAAa,EAAI,GACnD,GACAM,EAAiBN,EAAa,EAElC,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiCkC,EADjC,cACqDC,EADrD,aAIA,sBAAKxB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRyB,GAAG,kBACHzB,UAAU,eACV0B,MAAOT,EACPU,SAAU,SAAAC,GACRV,GAAeU,EAAEC,OAAOH,OACxBP,EAAe,IAPnB,UAUE,wBAAQO,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOI,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEb,MAAOsB,EAAMD,OACbpB,QAAS6B,EACT5B,YAAaA,EACbC,aAAc,SAACgB,GACba,EAAeb,MAGnB,6BACGe,EAAWhB,KAAI,SAAA0B,GACd,OACE,oBACE,UAAQ,OADV,SAIGA,GAFIA,YElEnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.28949660.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage:number;\n  currentPage:number;\n  onPageChange:(number: number) => void\n\n};\nexport const Pagination : React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  function pagecount(allitem:number, pagesinList:number):number[] {\n    const pages:number = (allitem - (allitem % pagesinList)) / pagesinList;\n    const allPages = (allitem % pagesinList) ? pages + 1 : pages;\n\n    const arrpages = [];\n\n    for (let i = 1; i <= allPages; i += 1) {\n      arrpages.push(i);\n    }\n\n    return arrpages;\n  }\n\n  const numberPage = pagecount(total, perPage);\n\n  return (\n    <ul\n      className=\"pagination\"\n    >\n      <li\n        className={cn('page-item', { disabled: currentPage === 1 })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            if (currentPage > 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {numberPage.map(page => {\n        return (\n          <li className={cn('page-item', 'is-info',\n            { active: currentPage === page })}\n          >\n            <a\n              key={page}\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              onClick={() => {\n                onPageChange(page);\n              }}\n              href=\"#1\"\n            >\n              {page}\n\n            </a>\n          </li>\n        );\n      })}\n      <li className={cn('page-item',\n        { disabled: currentPage === numberPage.length })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n          onClick={() => {\n            if (perPage * currentPage < total) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items:string[] = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemInPage, setitemInPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  function getVisiblItem(inPage:number, page:number):string[] {\n    const arr = items.slice(inPage * page - inPage, inPage * page);\n\n    return arr;\n  }\n\n  const visiblItem = getVisiblItem(itemInPage, currentPage);\n  const pageCountBegin = itemInPage * currentPage - itemInPage + 1;\n  const pageCountEnd = pageCountBegin + itemInPage - 1 > 42\n    ? 42\n    : pageCountBegin + itemInPage - 1;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${pageCountBegin} - ${pageCountEnd} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemInPage}\n            onChange={e => {\n              setitemInPage(+e.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={items.length}\n        perPage={itemInPage}\n        currentPage={currentPage}\n        onPageChange={(page):void => {\n          setCurrentPage(page);\n        }}\n      />\n      <ul>\n        {visiblItem.map(item => {\n          return (\n            <li\n              data-cy=\"item\"\n              key={item}\n            >\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}